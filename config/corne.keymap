/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT_L 0
#define SYMBOLS_L 1
#define ARROWS_L  2
#define NUMBERS_L 3

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        new_behavior: new_behavior {
            compatible = "zmk,behavior-soft-off";
            label = "NEW_BEHAVIOR";
            #binding-cells = <0>;
        };
    };

    combos {
        compatible = "zmk,combos";

        a {
            bindings = <&kp ESCAPE>;
            key-positions = <2 1>;
        };

        b {
            bindings = <&kp CLCK>;
            key-positions = <14 13>;
        };

        c {
            bindings = <&kp TAB>;
            key-positions = <26 25>;
        };

        d {
            bindings = <&kp BACKSPACE>;
            key-positions = <10 9>;
        };

        e {
            bindings = <&kp ENTER>;
            key-positions = <22 21>;
        };

        f {
            bindings = <&kp MINUS>;
            key-positions = <19 20>;
        };

        g {
            bindings = <&kp EQUAL>;
            key-positions = <21 20>;
        };

        h {
            bindings = <&sys_reset>;
            key-positions = <1 29>;
        };

        j {
            bindings = <&sys_reset>;
            key-positions = <30 10>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Mainlayer {
            label = "Home";
            bindings = <
&kp TAB         &kp Q               &kp W           &kp E           &kp R                         &kp T        &kp Y            &kp U      &kp I           &kp O    &kp P     &kp DELETE
&kp LEFT_ALT    &mt LEFT_CONTROL A  &mt LEFT_ALT S  &mt LEFT_GUI D  &mt LEFT_SHIFT F              &kp G        &kp H            &kp J      &kp K           &kp L    &kp SEMI  &kp RET
&kp LEFT_SHIFT  &kp Z               &kp X           &kp C           &kp V                         &kp B        &kp N            &kp M      &kp COMMA       &kp DOT  &kp FSLH  &kp RSHFT
                                                    &kp LEFT_GUI    &mt LS(LA(LC(LG(LGUI)))) RET  &lt 1 TAB    &lt 3 BACKSPACE  &kp SPACE  &kp LEFT_SHIFT
            >;
        };

        number_layer {
            label = "1";
            bindings = <
&none  &kp LS(N1)    &kp LS(N2)    &kp LS(N3)    &kp LS(N4)    &kp LS(N5)    &kp LS(N6)    &kp LS(N7)  &kp LS(N8)  &kp LS(N9)  &kp LS(N0)  &kp BACKSPACE
&none  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp N7      &kp N8      &kp N9      &kp N0      &none
&none  &none         &none         &none         &none         &none         &bootloader   &none       &none       &none       &none       &none
                                   &none         &none         &none         &none         &none       &none
            >;
        };

        arrow_layer {
            label = "3";
            bindings = <
&none  &none           &kp UP_ARROW    &none       &sys_reset  &none    &none           &none     &none         &none      &none  &none
&none  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT   &none       &none    &kp LEFT_ARROW  &kp DOWN  &kp UP_ARROW  &kp RIGHT  &none  &none
&none  &none           &none           &none       &none       &none    &none           &none     &none         &none      &none  &none
                                       &kp ESCAPE  &none       &none    &none           &none     &none
            >;
        };

        Nav {
            label = "2";
            bindings = <
&kp ESC  &kp LS(N1)  &kp LS(N2)      &kp LS(N3)  &kp LS(N4)  &kp LS(N5)    &kp LS(N6)      &kp LS(N7)      &kp LS(N8)    &kp LS(N9)  &kp LS(N0)  &none
&none    &none       &kp LEFT_ARROW  &kp DEL     &kp RIGHT   &none         &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT   &none       &none
&none    &none       &none           &none       &none       &none         &none           &none           &none         &none       &none       &none
                                     &none       &none       &none         &none           &none           &none
            >;
        };
    };
};
